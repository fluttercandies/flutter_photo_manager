name: Add library to new flutter project

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - 2.x

jobs:
  build-for-android:
    name: Build for Android on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: flutter-actions/setup-flutter@v4
        with:
          channel: 'stable'
          cache: true
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
      - run: flutter doctor -v
        name: Flutter info
      - run: flutter create new_project --platforms=android
        name: Create new project
      - name: Add photo_manager to new project.
        run: flutter pub add -- 'photo_manager:{"path":".."}'
        working-directory: ${{ github.workspace }}/new_project
        shell: bash
      - run: flutter pub get
        working-directory: ${{ github.workspace }}/new_project
      - run: flutter build apk --debug
        working-directory: ${{ github.workspace }}/new_project
        name: Build example
  build-for-ios:
    name: Build for ios on macos-latest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: flutter-actions/setup-flutter@v4
        with:
          channel: 'stable'
          cache: true
      - run: flutter doctor -v
        name: Flutter info
      - run: flutter create new_project --platforms=ios
        name: Create new project
      - name: Add photo_manager to new project.
        run: flutter pub add -- 'photo_manager:{"path":".."}'
        working-directory: ${{ github.workspace }}/new_project
        shell: bash
      - run: flutter pub get
        working-directory: ${{ github.workspace }}/new_project
      - name: Set minimum iOS version
        run: |
              [ -f "ios/Podfile" ] && sed -i '' 's/platform :ios, .*/platform :ios, '\''11.0'\''/g' ios/Podfile
              [ -f "ios/Runner.xcodeproj/project.pbxproj" ] && sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = .*;/IPHONEOS_DEPLOYMENT_TARGET = 11.0;/g' ios/Runner.xcodeproj/project.pbxproj
        working-directory: ${{ github.workspace }}/new_project
      - run: flutter build ios --release --no-codesign
        working-directory: ${{ github.workspace }}/new_project
        name: Build example
  build-for-web:
    name: Build for Web on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: flutter-actions/setup-flutter@v4
        with:
          channel: 'stable'
          cache: true
      - run: flutter doctor -v
        name: Flutter info
      - run: flutter create new_project --platforms=web
        name: Create new project
      - name: Add photo_manager to new project.
        run: flutter pub add -- 'photo_manager:{"path":".."}'
        working-directory: ${{ github.workspace }}/new_project
        shell: bash
      - run: flutter pub get
        working-directory: ${{ github.workspace }}/new_project
      - run: flutter build web --release
        working-directory: ${{ github.workspace }}/new_project
        name: Build example
  build-for-linux:
    name: Build for Linux on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: flutter-actions/setup-flutter@v4
        with:
          channel: 'stable'
          cache: true
      - name: Install required packages
        run: |
              sudo apt-get update -y
              sudo apt-get install -y ninja-build libgtk-3-dev
      - name: Enable support for linux
        run: flutter config --enable-linux-desktop
      - run: flutter doctor -v
        name: Flutter info
      - run: flutter create new_project --platforms=linux
        name: Create new project
      - name: Add photo_manager to new project.
        run: flutter pub add -- 'photo_manager:{"path":".."}'
        working-directory: ${{ github.workspace }}/new_project
        shell: bash
      - run: flutter pub get
        working-directory: ${{ github.workspace }}/new_project
      - run: flutter build linux --release
        working-directory: ${{ github.workspace }}/new_project
        name: Build example
  build-for-macos:
    name: Build for macOS on macos-latest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: flutter-actions/setup-flutter@v4
        with:
          channel: 'stable'
          cache: true
      - run: flutter doctor -v
        name: Flutter info
      - run: flutter create new_project --platforms=macos
        name: Create new project
      - name: Add photo_manager to new project.
        run: flutter pub add -- 'photo_manager:{"path":".."}'
        working-directory: ${{ github.workspace }}/new_project
        shell: bash
      - run: flutter pub get
        working-directory: ${{ github.workspace }}/new_project
      - name: Set minimum macOS version
        run: |
              [ -f "macos/Podfile" ] && sed -i '' 's/platform :osx, .*/platform :osx, '\''11.0'\''/g' macos/Podfile
              [ -f "macos/Runner.xcodeproj/project.pbxproj" ] && sed -i '' 's/MACOSX_DEPLOYMENT_TARGET = .*;/MACOSX_DEPLOYMENT_TARGET = 11.0;/g' macos/Runner.xcodeproj/project.pbxproj
        working-directory: ${{ github.workspace }}/new_project
      - run: flutter build macos --release
        working-directory: ${{ github.workspace }}/new_project
        name: Build example
  build-for-windows:
    name: Build for Windows on windows-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: flutter-actions/setup-flutter@v4
        with:
          channel: 'stable'
          cache: true
      - run: flutter doctor -v
        name: Flutter info
      - run: flutter create new_project --platforms=windows
        name: Create new project
      - name: Add photo_manager to new project.
        run: flutter pub add -- 'photo_manager:{"path":".."}'
        working-directory: ${{ github.workspace }}/new_project
        shell: bash
      - run: flutter pub get
        working-directory: ${{ github.workspace }}/new_project
      - run: flutter build windows --release
        working-directory: ${{ github.workspace }}/new_project
        name: Build example
